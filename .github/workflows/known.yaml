name: CI

on:
  push:
    branches:
      - master

jobs:
  test-and-build:
    runs-on: self-hosted

    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
            node-version: '16'

      - name: Run unit tests
        run: npm run test

      - name: Upload test report
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: test-report.txt

      - name: Install Docker Engine
        uses: docker/setup-buildx-action@v2
        with:
          version: 'latest'

      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set Version with date-time
        run: |
          DATE=$(date +%Y%m%d)
          TIME=$(date +%H%M%S)
          VERSION="1.0.0-${DATE}.${TIME}"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build the Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/new-image:${VERSION} .

    #   - name: Install Trivy
    #     run: |
    #       set -e
    #       curl -sfl https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -x
    #       # Check if the trivy binary is present
    #       ls -l ./bin || echo "Trivy binary not found"
    #       # Move the binary to the desired location
    #       sudo mv ./bin/trivy /usr/local/bin/trivy
    #       sudo chmod +x /usr/local/bin/trivy

    #   - name: Verify Trivy installation
    #     run: |
    #       trivy --version
      
    #   - name: Scan the Docker image
    #     run: |
    #         trivy image --format json --output trivy-scan-report.json ${{ secrets.DOCKER_USERNAME }}/new-image:1.0.0
        
    #   - name: Upload Trivy report
    #     uses: actions/upload-artifact@v4
    #     with:
    #       name: trivy-report
    #       path: trivy-scan-report.json

    #   - name: Push the Docker image to Docker Hub
    #     run: |
    #       docker push ${{ secrets.DOCKER_USERNAME }}/new-image:1.0.0